<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnConnect.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALRklMEnd8wwAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACDU4ZhV5gL8AAAAcAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAC4z2vE2AAAAPgAAAAAAAAAAy4s3BsuK
        NywAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFBPOEeTOi6p5SAYM2oAAAAoAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADxrSi3LYEnN/0o87f9ZRL7/RC8YtwAA
        AAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA53UiazhWGY/0o87f9KPO3/Sjzt/4hi
        iP9bPxqDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjGA50kWU2+T0wrf84LbX/OS64/z4y
        yf9FNrL/nWwv/TgnED4AAAAAAAAAAAAAAAAAAAAAVkfnJAAAAAAAAAAamWovzZpuev9KPO3/Sjzt/0o8
        7f9KPO3/Sjzt/4lhZ/+GXCa7AAAAAAAAAAAj3uoiIt7rFlVH6AQAAAAAAAAAOseJO+eEYJr/Sjzt/0o8
        7f9KPO3/Sjzt/0o87f+MZY//mmsr9wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADrGiTv1gmOs/0o8
        7f9KPO3/Sjzt/0o87f9KPO3/rZ/b/+XZyf3////L////yf///73///+bAAAAAAAAAAAAAAAyvoQ515N0
        qP9KPO3/Sjzt/1BC7f+HffP/h37z/7icrv+8n3np////s/7+/qn///9W/v7+GgAAAAAAAAAAAAAAAn1W
        KK/DmoD/TT/t/0o87f9RRO3/joXz/4+G8//q29H/////8f///2L///9g////YP///xwAAAAAAAAAAAAA
        AAAUDgosonEy6Yt0xv9KPO3/Sjzt/5qS9P/a0uj/8O3p5////9v///+/////vf///1gAAAAAAAAAAAAA
        AAAAAAAAVkfoMCUbKC53Vz6zWU6y+T0xw/86LqnnUDkyfgcFBwYAAAAAAAAAAPz8/A4AAAAAAAAAAAAA
        AAAAAAAAAAAAAFZF5gAAAAAAAAAAAAAAAAYYEAgSfVMkAAAAAAAAAAAAAAAAAAAAAAD7+/soAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxIM6QMWEOioAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA/v8AAP7/AAD//wAA/P8AAPg/AADwHwAA8B8AAOAPAADgDwAA4AAAAOADAADgDwAA8AMAAPh/
        AAD//wAA//8AAA==
</value>
  </data>
</root>